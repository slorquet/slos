#ifndef STM32F4_SPI
#define STM32F4_SPI

#include <stdint.h>

//indices for API
enum {
    STM32F4_SPI_1,
    STM32F4_SPI_2,
    STM32F4_SPI_3,
    STM32F4_SPI_4,
    STM32F4_SPI_5,
};

/* spi flags
   pos len  name
   0   1    CPHA
   1   1    CPOL
   2   1    LSB_FIRST
   3   3    BAUD_DIV
*/

enum {
    STM32F4_SPI_FLAGS_SHIFT_BAUDDIV  = 3,
    STM32F4_SPI_FLAGS_SHIFT_LSBFIRST = 2,
    STM32F4_SPI_FLAGS_SHIFT_CPOL     = 1,
    STM32F4_SPI_FLAGS_SHIFT_CPHA     = 0,
};

enum {
    STM32F4_SPI_FLAGS_MASK_BAUDDIV  = 0x00000038,
    STM32F4_SPI_FLAGS_MASK_LSBFIRST = 0x00000004,
    STM32F4_SPI_FLAGS_MASK_CPOL     = 0x00000002,
    STM32F4_SPI_FLAGS_MASK_CPHA     = 0x00000001,
};

enum {
    STM32F4_SPI_MSBFIRST = 0<<STM32F4_SPI_FLAGS_SHIFT_LSBFIRST,
    STM32F4_SPI_LSBFIRST = 1<<STM32F4_SPI_FLAGS_SHIFT_LSBFIRST,
};

enum {
    STM32F4_SPI_CPOL_0 = 0<<STM32F4_SPI_FLAGS_SHIFT_CPOL,
    STM32F4_SPI_CPOL_1 = 1<<STM32F4_SPI_FLAGS_SHIFT_CPOL,
    STM32F4_SPI_CPHA_0 = 0<<STM32F4_SPI_FLAGS_SHIFT_CPOL,
    STM32F4_SPI_CPHA_1 = 1<<STM32F4_SPI_FLAGS_SHIFT_CPOL,
    STM32F4_SPI_MODE_0 = STM32F4_SPI_CPOL_0 | STM32F4_SPI_CPHA_0,
    STM32F4_SPI_MODE_1 = STM32F4_SPI_CPOL_0 | STM32F4_SPI_CPHA_1,
    STM32F4_SPI_MODE_2 = STM32F4_SPI_CPOL_1 | STM32F4_SPI_CPHA_0,
    STM32F4_SPI_MODE_3 = STM32F4_SPI_CPOL_1 | STM32F4_SPI_CPHA_1,
};

enum {
    STM32F4_SPI_BAUDDIV_2   = 0<<STM32F4_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32F4_SPI_BAUDDIV_4   = 1<<STM32F4_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32F4_SPI_BAUDDIV_8   = 2<<STM32F4_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32F4_SPI_BAUDDIV_16  = 3<<STM32F4_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32F4_SPI_BAUDDIV_32  = 4<<STM32F4_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32F4_SPI_BAUDDIV_64  = 5<<STM32F4_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32F4_SPI_BAUDDIV_128 = 6<<STM32F4_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32F4_SPI_BAUDDIV_256 = 7<<STM32F4_SPI_FLAGS_SHIFT_BAUDDIV,
};

void stm32f4_spi_init(uint32_t spiid, uint32_t flags);
void stm32f4_spi_transac8(uint32_t spiid, uint32_t len, uint8_t *mosi, uint8_t *miso);

#endif //STM32F4_SPI
