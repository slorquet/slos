#ifndef STM32F4_GPIO
#define STM32F4_GPIO

#include <stdint.h>

/* format for flags
	offset size name
	0      4    LINE (0-15)
	4      4    PORT (0-10)
	8      4    ALT (0-15)
        12     2    MODER (0-3)
	14     2    PUPDR (0-2)
	16     2    OSPEEDR (0-3)
	18     1    OTYPER (0-1)
*/

#define STM32F4_GPIO_PORT_COUNT 11

enum {
	STM32F4_GPIO_FLAGS_SHIFT_LINE = 0,
	STM32F4_GPIO_FLAGS_SHIFT_PORT = 4,
	STM32F4_GPIO_FLAGS_SHIFT_ALT  = 8,
	STM32F4_GPIO_FLAGS_SHIFT_MODE = 12,
	STM32F4_GPIO_FLAGS_SHIFT_PULL = 14,
	STM32F4_GPIO_FLAGS_SHIFT_SPD  = 16,
	STM32F4_GPIO_FLAGS_SHIFT_TYPE = 18,
};

enum {
	STM32F4_GPIO_FLAGS_MASK_LINE = 0x0000000F,
	STM32F4_GPIO_FLAGS_MASK_PORT = 0x000000F0,
	STM32F4_GPIO_FLAGS_MASK_ALT  = 0x00000F00,
	STM32F4_GPIO_FLAGS_MASK_MODE = 0x00003000,
	STM32F4_GPIO_FLAGS_MASK_PULL  = 0x0000C000,
	STM32F4_GPIO_FLAGS_MASK_SPD  = 0x00030000,
	STM32F4_GPIO_FLAGS_MASK_TYPE = 0x00040000,
};

enum {
    STM32F4_GPIO_PIN_0 =  0<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_1 =  1<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_2 =  2<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_3 =  3<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_4 =  4<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_5 =  5<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_6 =  6<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_7 =  7<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_8 =  8<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_9 =  9<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_10= 10<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_11= 11<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_12= 12<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_13= 13<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_14= 14<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
    STM32F4_GPIO_PIN_15= 15<<STM32F4_GPIO_FLAGS_SHIFT_LINE,
};

enum {
    STM32F4_GPIO_PORT_A =  0<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_B =  1<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_C =  2<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_D =  3<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_E =  4<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_F =  5<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_G =  6<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_H =  7<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_I =  8<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_J =  9<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
    STM32F4_GPIO_PORT_K = 10<<STM32F4_GPIO_FLAGS_SHIFT_PORT,
};

enum {
    STM32F4_GPIO_ALT_0 =  0<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_1 =  1<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_2 =  2<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_3 =  3<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_4 =  4<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_5 =  5<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_6 =  6<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_7 =  7<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_8 =  8<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_9 =  9<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_10= 10<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_11= 11<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_12= 12<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_13= 13<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_14= 14<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
    STM32F4_GPIO_ALT_15= 15<<STM32F4_GPIO_FLAGS_SHIFT_ALT,
};

enum {
    STM32F4_GPIO_MODE_IN     = 0<<STM32F4_GPIO_FLAGS_SHIFT_MODE,
    STM32F4_GPIO_MODE_OUT    = 1<<STM32F4_GPIO_FLAGS_SHIFT_MODE,
    STM32F4_GPIO_MODE_ALT    = 2<<STM32F4_GPIO_FLAGS_SHIFT_MODE,
    STM32F4_GPIO_MODE_ANALOG = 3<<STM32F4_GPIO_FLAGS_SHIFT_MODE,
};

enum {
    STM32F4_GPIO_PULL_NONE = 0<<STM32F4_GPIO_FLAGS_SHIFT_PULL,
    STM32F4_GPIO_PULL_UP   = 1<<STM32F4_GPIO_FLAGS_SHIFT_PULL,
    STM32F4_GPIO_PULL_DOWN = 2<<STM32F4_GPIO_FLAGS_SHIFT_PULL,
};

enum {
    STM32F4_GPIO_SPD_LOW  = 0<<STM32F4_GPIO_FLAGS_SHIFT_SPD,
    STM32F4_GPIO_SPD_MED  = 1<<STM32F4_GPIO_FLAGS_SHIFT_SPD,
    STM32F4_GPIO_SPD_FAST = 2<<STM32F4_GPIO_FLAGS_SHIFT_SPD,
    STM32F4_GPIO_SPD_HIGH = 3<<STM32F4_GPIO_FLAGS_SHIFT_SPD,
};

enum {
    STM32F4_GPIO_TYPE_PP = 0<<STM32F4_GPIO_FLAGS_SHIFT_TYPE,
    STM32F4_GPIO_TYPE_OD = 1<<STM32F4_GPIO_FLAGS_SHIFT_TYPE,
};


void stm32f4_gpio_init(uint32_t gpiodesc);
void stm32f4_gpio_write(uint32_t gpio, int state);

#endif //STM32F4_GPIO
