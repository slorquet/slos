#ifndef STM32_SPI
#define STM32_SPI

#include <stdint.h>

//reg offsets
#define STM32_REGOFF_SPI_CR1              0x00
#define STM32_REGOFF_SPI_CR2              0x04
#define STM32_REGOFF_SPI_SR               0x08
#define STM32_REGOFF_SPI_DR               0x0C
#define STM32_REGOFF_SPI_CRCPR            0x10
#define STM32_REGOFF_SPI_RXCRCR           0x14
#define STM32_REGOFF_SPI_TXCRCR           0x18
#define STM32_REGOFF_SPI_I2SCFGR          0x1C
#define STM32_REGOFF_SPI_I2SPR            0x20
//bits values
#define STM32_REGMASK_SPI_CR1_BIDIMODE    (1<<15)
#define STM32_REGMASK_SPI_CR1_BIDIOE      (1<<14)
#define STM32_REGMASK_SPI_CR1_CRCEN       (1<<13)
#define STM32_REGMASK_SPI_CR1_CRCNEXT     (1<<12)
#define STM32_REGMASK_SPI_CR1_DFF         (1<<11)
#define STM32_REGMASK_SPI_CR1_RXONLY      (1<<10)
#define STM32_REGMASK_SPI_CR1_SSM         (1<<9)
#define STM32_REGMASK_SPI_CR1_SSI         (1<<8)
#define STM32_REGMASK_SPI_CR1_LSBFIRST    (1<<7)
#define STM32_REGMASK_SPI_CR1_SPE         (1<<6)
#define STM32_REGSHIFT_SPI_CR1_BR         3
#define STM32_REGMASK_SPI_CR1_MSTR        (1<<2)
#define STM32_REGMASK_SPI_CR1_CPOL        (1<<1)
#define STM32_REGMASK_SPI_CR1_CPHA        (1<<0)

#define STM32_REGMASK_SPI_CR2_TXEIE       (1<<7)
#define STM32_REGMASK_SPI_CR2_RXNEIE      (1<<6)
#define STM32_REGMASK_SPI_CR2_ERRIE       (1<<5)
#define STM32_REGMASK_SPI_CR2_FRF         (1<<4)
#define STM32_REGMASK_SPI_CR2_SSOE        (1<<2)
#define STM32_REGMASK_SPI_CR2_TXDMAEN     (1<<1)
#define STM32_REGMASK_SPI_CR2_RXDMAEN     (1<<0)

#define STM32_REGMASK_SPI_SR_FRE          (1<<8)
#define STM32_REGMASK_SPI_SR_BSY          (1<<7)
#define STM32_REGMASK_SPI_SR_OVR          (1<<6)
#define STM32_REGMASK_SPI_SR_MODF         (1<<5)
#define STM32_REGMASK_SPI_SR_CRCERR       (1<<4)
#define STM32_REGMASK_SPI_SR_UDR          (1<<3)
#define STM32_REGMASK_SPI_SR_CHSIDE       (1<<2)
#define STM32_REGMASK_SPI_SR_TXE          (1<<1)
#define STM32_REGMASK_SPI_SR_RXNE         (1<<0)

#define STM32_REGMASK_SPI_I2SCFGR_I2SMOD  (1<<11)
#define STM32_REGMASK_SPI_I2SCFGR_I2SE    (1<<10)
#define STM32_REGMASK_SPI_I2SCFGR_I2SMAST (1<<9)
#define STM32_REGMASK_SPI_I2SCFGR_I2SRX   (1<<8)
#define STM32_REGSHIFT_SPI_I2SCFGR_I2SCFG 8
#define STM32_REGMASK_SPI_I2SCFGR_PCMSYNC (1<<7)
#define STM32_REGSHIFT_SPI_I2SCFGR_I2SSTD 4
#define STM32_REGMASK_SPI_I2SCFGR_CKPOL   (1<<5)
#define STM32_REGSHIFT_SPI_I2SCFGR_DATLEN 1
#define STM32_REGMASK_SPI_I2SCFGR_CHLEN   (1<<0)

#define STM32_REGMASK_SPI_I2SPR_MCKOE     (1<<9)
#define STM32_REGMASK_SPI_I2SPR_ODD       (1<<8)
#define STM32_REGSHIFT_SPI_I2SPR_I2SDIV   0

//indices for API
enum {
    STM32_SPI_1,
    STM32_SPI_2,
    STM32_SPI_3,
    STM32_SPI_4,
    STM32_SPI_5,
};

/* spi flags
   pos len  name
   0   1    CPHA
   1   1    CPOL
   2   1    LSB_FIRST
   3   3    BAUD_DIV
*/

enum {
    STM32_SPI_FLAGS_SHIFT_BAUDDIV  = 3,
    STM32_SPI_FLAGS_SHIFT_LSBFIRST = 2,
    STM32_SPI_FLAGS_SHIFT_CPOL     = 1,
    STM32_SPI_FLAGS_SHIFT_CPHA     = 0,
};

enum {
    STM32_SPI_FLAGS_MASK_BAUDDIV  = 0x00000038,
    STM32_SPI_FLAGS_MASK_LSBFIRST = 0x00000004,
    STM32_SPI_FLAGS_MASK_CPOL     = 0x00000002,
    STM32_SPI_FLAGS_MASK_CPHA     = 0x00000001,
};

enum {
    STM32_SPI_MSBFIRST = 0<<STM32_SPI_FLAGS_SHIFT_LSBFIRST,
    STM32_SPI_LSBFIRST = 1<<STM32_SPI_FLAGS_SHIFT_LSBFIRST,
};

enum {
    STM32_SPI_CPOL_0 = 0<<STM32_SPI_FLAGS_SHIFT_CPOL,
    STM32_SPI_CPOL_1 = 1<<STM32_SPI_FLAGS_SHIFT_CPOL,
    STM32_SPI_CPHA_0 = 0<<STM32_SPI_FLAGS_SHIFT_CPOL,
    STM32_SPI_CPHA_1 = 1<<STM32_SPI_FLAGS_SHIFT_CPOL,
    STM32_SPI_MODE_0 = STM32_SPI_CPOL_0 | STM32_SPI_CPHA_0,
    STM32_SPI_MODE_1 = STM32_SPI_CPOL_0 | STM32_SPI_CPHA_1,
    STM32_SPI_MODE_2 = STM32_SPI_CPOL_1 | STM32_SPI_CPHA_0,
    STM32_SPI_MODE_3 = STM32_SPI_CPOL_1 | STM32_SPI_CPHA_1,
};

enum {
    STM32_SPI_BAUDDIV_2   = 0<<STM32_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32_SPI_BAUDDIV_4   = 1<<STM32_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32_SPI_BAUDDIV_8   = 2<<STM32_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32_SPI_BAUDDIV_16  = 3<<STM32_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32_SPI_BAUDDIV_32  = 4<<STM32_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32_SPI_BAUDDIV_64  = 5<<STM32_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32_SPI_BAUDDIV_128 = 6<<STM32_SPI_FLAGS_SHIFT_BAUDDIV,
    STM32_SPI_BAUDDIV_256 = 7<<STM32_SPI_FLAGS_SHIFT_BAUDDIV,
};

void stm32_spi_init(uint32_t spiid, uint32_t flags);
void stm32_spi_transac8(uint32_t spiid, uint32_t len, uint8_t *mosi, uint8_t *miso);

#endif //STM32_SPI
